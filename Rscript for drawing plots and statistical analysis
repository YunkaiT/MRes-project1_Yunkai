# Distribution of HR scores in HGSOC 
library(ggplot2)
library(readr)
library(dplyr)
library(forcats)
getwd()
#set the working directory to the one that has the data files
setwd("C:\\Users\\Yunkai Tang\\OneDrive\\文档")

data <- read_csv("filtered_326_classification.csv")

# Since use the 30x results as the benchmark, calculate the number of samples in different groups under 30x
data_counts <- data %>%
  count(`30x`) %>%
  mutate(`30x` = fct_recode(`30x`, "HRD" = "Yes", "HRP" = "No"))

# Add the germline group
data_counts <- data_counts %>%
  add_row(`30x` = "Germline", n = 22)

data_counts$`30x` <- factor(data_counts$`30x`, 
                            levels = c("Germline", "HRD", "Borderline", "HRP"))


bar_colors <- c("Germline" = "#4EDCED", "HRD" = "#ED9E4E", "Borderline" = "#F0E225", "HRP" = "#73F025")


ggplot(data_counts, aes(x = `30x`, y = n, fill = `30x`)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = n), vjust = -0.3, size = 5) +
  scale_fill_manual(values = bar_colors) +
  labs(title = "Count of HRD Classifications at 30x Depth",
       x = "Classification",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggsave('HRD_Classifications_Bar_Chart.png', width = 10, height = 6, dpi = 300)


combined_data_other <- combined_data_filtered %>% 
  filter(!(Group == "Modified" & `30x` == "Germline"))


combined_data_germline_modified <- combined_data_filtered %>% 
  filter(Group == "Modified" & `30x` == "Germline")


ggplot() +
  geom_bar(data = combined_data_other, aes(x = `30x`, y = n, fill = interaction(`30x`, Group, sep = ".")), 
           stat = "identity", position = position_dodge(width = 0.8)) +
  geom_bar(data = combined_data_germline_modified, aes(x = `30x`, y = n, fill = interaction(`30x`, Group, sep = ".")), 
           stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
  geom_text(data = combined_data_filtered, aes(x = `30x`, y = n, label = n, group = interaction(`30x`, Group, sep = ".")), 
            position = position_dodge(width = 0.8), vjust = -0.3, size = 3.5) +
  scale_fill_manual(values = bar_colors) +
  labs(title = "Count of HRD Classifications at 30x Depth",
       x = "Classification",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))



combined_data <- data.frame(
  `30x` = c("HRD", "HRD", "Borderline", "Borderline", "HRP", "HRP", "Germline"),
  n = c(40, 40, 30, 30, 34, 12, 22), 
  Group = c("Original", "Modified", "Original", "Modified", "Original", "Modified", "Modified")
)


combined_data$`30x` <- factor(combined_data$`30x`, levels = c("Germline", "HRD", "Borderline", "HRP"))


bar_colors <- c("HRD.Original" = "#FF6C1D", "HRD.Modified" = "#FAAC7C",
                "Borderline.Original" = "#E2B414", "Borderline.Modified" = "#F3E200",
                "HRP.Original" = "#1FC70A", "HRP.Modified" = "#80F202",
                "Germline.Modified" = "#00C7F9") # Germline仅在Modified中存在


ggplot(combined_data, aes(x = `30x`, y = n, fill = interaction(Group, `30x`, sep = "."))) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
  geom_text(aes(label = n), vjust = -0.3, position = position_dodge(width = 0.8), size = 3.5) +
  scale_fill_manual(values = bar_colors) +
  labs(title = "Count of HRD Classifications at 30x Depth", x = "Classification", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggsave("HRD_Classifications_Bar_Chart_Final.png", width = 10, height = 6, dpi = 300)










# Draw the scatter plot shows 3 typical cases (1 HRP, 1HRD, 1 HR borderline)
# Load necessary libraries
library(ggplot2)
library(gridExtra)

# Create data frame for plotting
patient_data <- data.frame(
  Group = rep(c('Patient 1', 'Patient 2', 'Patient 3'), each=5),
  Sample = rep(paste('Sample', 1:5), 3),
  HRD_Score = c(4, 2, 4, 5, 6,  # Patient 1's scores
                37, 46, 41, 38, 40,  # Patient 2's scores
                16, 14, 15, 18, 15)  # Patient 3's scores
)

# Split data by group
groups <- split(patient_data, patient_data$Group)

# Color mapping for each patient
colors <- c('Patient 1' = '#0CBA00', 'Patient 2' = '#F54700', 'Patient 3' = '#FFB300')

# Function to create plot for each patient with specific colors
plot_patient_data <- function(data, group_name) {
  ggplot(data, aes(x = Sample, y = HRD_Score)) +
    geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=19, ymax=Inf), fill="orange", alpha=0.05) + # Shaded area for y >= 19
    geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=15, ymax=19), fill="yellow", alpha=0.05) + # Shaded area for 15 < y < 19
    geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=15), fill="green", alpha=0.05) + # Shaded area for y <= 15
    geom_point(size = 5, color = colors[group_name]) + # Specify point color
    geom_hline(yintercept = 15, color = 'blue', linetype = 'dashed') + # Add blue dashed line at y=15
    geom_hline(yintercept = 19, color = 'red', linetype = 'dashed') + # Add red dashed line at y=19
    scale_y_continuous(limits = c(0, max(patient_data$HRD_Score) + 5), breaks = seq(0, max(patient_data$HRD_Score) + 5, by = 5)) +
    labs(x = 'Sample', y = 'HRD Score') +
    theme_minimal() # Use a minimal theme
}

# Generate plots for each patient with specific colors
plots <- mapply(plot_patient_data, groups, names(groups), SIMPLIFY = FALSE)

# Arrange plots in a grid
do.call(gridExtra::grid.arrange, c(plots, ncol = 3))














# Drawing the boxplot of the HRD scores and different depths
# Draw the general boxplot for all samples
  library(ggplot2)
  library(readr)
  library(dplyr)
  library(tidyr)
  getwd()
  setwd("C:\\Users\\Yunkai Tang\\OneDrive\\文档")
  data_hrdvalue <- read_csv("326_HRD_value.csv")
  
  data_long <- pivot_longer(data_hrdvalue, 
                            cols = -SampleID, 
                            names_to = "Depth", 
                            values_to = "HRD_Value")
  
  data_long$Depth <- factor(data_long$Depth, levels = c('30x', '20x', '5x', '1x', '0.8x', '0.6x', '0.5x', '0.4x', '0.3x', '0.2x', '0.1x'))
  
  
  ggplot(data_long, aes(x = Depth, y = HRD_Value, fill = Depth)) +
    geom_boxplot() +
    scale_fill_manual(values = c('30x' = "#E5989B", '20x' = "#F39C12", '5x' = "#8BECF8", '1x' = "#FAD7A0", '0.8x' = "#EEFF7C", '0.6x' = "#B8EE52", '0.5x' = "#FFE866", '0.4x' = "#FFC784", '0.3x' = "#FF9784", '0.2x' = "#76D7C4", '0.1x' = "#AED6F1")) +
    labs(title = "HRD Values Distribution by Sampling Depth",
         x = "Downsampling Depth",
         y = "HRD Value") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  

  ggsave("HRD_distribution_boxplot_custom_gradient.png", width = 12, height = 8, dpi = 300)
  
  
  

  
  
  # Draw the boxplot that shows the downsampling trend for both tumor samples with a qualified purity and without

  data_all <- read_csv("326_HRD_value.csv")
  data_filtered <- read_csv("filtered_326_HRD_value.csv")
  data_all <- data_all %>% filter(`30x` != 0)
  data_all_long <- pivot_longer(data_all, 
                                cols = -SampleID, 
                                names_to = "Depth", 
                                values_to = "HRD_Value") %>%
    mutate(Source = "All tumor samples")
  
  data_filtered_long <- pivot_longer(data_filtered, 
                                     cols = -SampleID, 
                                     names_to = "Depth", 
                                     values_to = "HRD_Value") %>%
    mutate(Source = "Tumor samples with purity ≥ 30%")
  

  data_combined <- bind_rows(data_all_long, data_filtered_long)
  
  # Order the different depths
  data_combined$Depth <- factor(data_combined$Depth, 
                                levels = c('30x', '20x', '5x', '1x', '0.8x', '0.6x', '0.5x', '0.4x', '0.3x', '0.2x', '0.1x'))
  
  # Draw the boxplot,#FF9784 color referes to all tumor samples, and #8BECF8 refers to tumor samples with puity >= 30%
  ggplot(data_combined, aes(x = Depth, y = HRD_Value, fill = Source)) +
    geom_boxplot(position = position_dodge(width = 0.8)) + # 使用position_dodge来并列显示
    scale_fill_manual(values = c("All tumor samples" = "#FF9784", 
                                 "Tumor samples with purity ≥ 30%" = "#8BECF8")) +
    labs(title = "HRD Values Distribution by Sampling Depth and Sample Source",
         x = "Downsampling Depth",
         y = "HRD Value (number of LGAs)") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  ggsave("/mnt/data/HRD_distribution_boxplot_combined_filtered.png", width = 12, height = 8, dpi = 300)
  
  
  
  
  
# Draw the boxplot for each subgroup of HR status

####HRD

  data_hrdvalue <- read_csv("filtered_326_HRD_value_HRD.csv")
  data_long <- pivot_longer(data_hrdvalue, 
                            cols = -SampleID, 
                            names_to = "Depth", 
                            values_to = "HRD_Value")

  data_long$Depth <- factor(data_long$Depth, levels = c('30x', '20x', '5x', '1x', '0.8x', '0.6x', '0.5x', '0.4x', '0.3x', '0.2x', '0.1x'))
  
  ggplot(data_long, aes(x = Depth, y = HRD_Value, fill = Depth)) +
    geom_boxplot() +
    scale_fill_manual(values = c('30x' = "#D64541", '20x' = "#E77E23", '5x' = "#F39C12", '1x' = "#F8C471", '0.8x' = "#FAD7A0", '0.6x' = "#FDEBD0", '0.5x' = "#FADBD8", '0.4x' = "#F5B7B1", '0.3x' = "#D2B4DE", '0.2x' = "#EBDEF0", '0.1x' = "#F4ECF7"  )) +
    labs(title = "HRD Values Distribution by Sampling Depth",
         x = "Downsampling Depth",
         y = "HRD Value") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
 
  ggsave("HRD_distribution_boxplot_custom_gradient.png", width = 12, height = 8, dpi = 300)
  
  
  ####Borderline
  data_hrdvalue <- read_csv("filtered_326_HRD_value_Borderline.csv")
  data_long <- pivot_longer(data_hrdvalue, 
                            cols = -SampleID, 
                            names_to = "Depth", 
                            values_to = "HRD_Value")
  data_long$Depth <- factor(data_long$Depth, levels = c('30x', '20x', '5x', '1x', '0.8x', '0.6x', '0.5x', '0.4x', '0.3x', '0.2x', '0.1x'))
  
  ggplot(data_long, aes(x = Depth, y = HRD_Value, fill = Depth)) +
    geom_boxplot() +
    scale_fill_manual(values = c('30x' = "#E5989B", '20x' = "#C39BD3", '5x' = "#76D7C4", '1x' = "#7FB3D5", '0.8x' = "#85C1E9", '0.6x' = "#A9DFBF", '0.5x' = "#D7BDE2", '0.4x' = "#FADBD8", '0.3x' = "#FDEBD0", '0.2x' = "#E8DAEF", '0.1x' = "#EAF2F8")) +
    
    labs(title = "HRD Values Distribution by Sampling Depth",
         x = "Downsampling Depth",
         y = "HRD Value") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  
  
  
  
  
  ####HRP

  data_hrdvalue <- read_csv("filtered_326_HRD_value_HRP.csv")
  data_long <- pivot_longer(data_hrdvalue, 
                            cols = -SampleID, 
                            names_to = "Depth", 
                            values_to = "HRD_Value")
  
  data_long$Depth <- factor(data_long$Depth, levels = c('30x', '20x', '5x', '1x', '0.8x', '0.6x', '0.5x', '0.4x', '0.3x', '0.2x', '0.1x'))
  
  
  ggplot(data_long, aes(x = Depth, y = HRD_Value, fill = Depth)) +
    geom_boxplot() +
    scale_fill_manual(values = c('30x' = "#2980B9", '20x' = "#3498DB", '5x' = "#5DADE2", '1x' = "#85C1E9", '0.8x' = "#AED6F1", '0.6x' = "#D6EAF8", '0.5x' = "#EBF5FB", '0.4x' = "#5499C7", '0.3x' = "#48C9B0", '0.2x' = "#76D7C4", '0.1x' = "#A3E4D7")) +
    
    
    
    labs(title = "HRD Values Distribution by Sampling Depth",
         x = "Downsampling Depth",
         y = "HRD Value") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))









# Draw the line graphs of Accuracy vs downsampling depths

# Load the necessary packeges for line graph
library(tidyr)
library(dplyr)
library(ggplot2)
library(readr)
library(scales) 
getwd()
# 读取数据

setwd("C:\\Users\\Yunkai Tang\\OneDrive\\文档")
classification <- readr::read_csv("filtered_326_classification.csv")

# Process the data format
classification_long <- classification %>%
  pivot_longer(cols = -SampleID, names_to = "Sequencing_Depth", values_to = "Result")

sequencing_depth_levels <- c("30x", "20x", "5x", "1x", "0.8x", "0.6x", "0.5x", "0.4x", "0.3x", "0.2x", "0.1x")

# Draw the line graph for the general accuracy
# Use the 30x results as the benchmarks
standard_30x <- classification_long %>%
  filter(Sequencing_Depth == "30x") %>%
  select(SampleID, Result)

accuracy_by_depth <- classification_long %>%
  left_join(standard_30x, by = "SampleID", suffix = c("", "_30x")) %>%
  mutate(Accurate = ifelse(Result == Result_30x, 1, 0)) %>%
  group_by(Sequencing_Depth) %>%
  summarise(Accuracy = mean(Accurate, na.rm = TRUE)) %>%
  mutate(Sequencing_Depth = factor(Sequencing_Depth, levels = sequencing_depth_levels))

ggplot(accuracy_by_depth, aes(x = Sequencing_Depth, y = Accuracy, group = 1)) +
  geom_line() +
  geom_point() +
  scale_y_continuous(labels = percent_format(), limits = c(0.5, 1)) +
  labs(title = "General accuracy trend of all tumor samples across different depths", x = "Sequencing Depth", y = "Accuracy (%)") +
  theme_minimal()

# Draw the line graphs for HRD (correspongding to "Yes" in the data), HRP ("No") and HR borderline ("Borderline") subgroups
plot_accuracy_for_category <- function(category) {
  yes_samples_30x <- classification_long %>%
    filter(Sequencing_Depth == "30x", Result == category) %>%
    select(SampleID)
  
  accuracy_yes_30x <- classification_long %>%
    semi_join(yes_samples_30x, by = "SampleID") %>%
    group_by(Sequencing_Depth) %>%
    summarise(Accuracy = mean(Result == category, na.rm = TRUE)) %>%
    mutate(Sequencing_Depth = factor(Sequencing_Depth, levels = sequencing_depth_levels))
  
  ggplot(accuracy_yes_30x, aes(x = Sequencing_Depth, y = Accuracy, group = 1)) +
    geom_line() +
    geom_point() +
    scale_y_continuous(labels = percent_format(), limits = c(0.5, 1)) +
    labs(title = paste("Accuracy trend for tumor samples Classified as", shQuote(category), "at 30x"),
         x = "Sequencing Depth", y = "Accuracy (%)") +
    theme_minimal()
}

# HRD
plot_accuracy_for_category("Yes")

# HR borderline
plot_accuracy_for_category("Borderline")

# HRP
plot_accuracy_for_category("No")







### Conduct statistical analysis (ANOVA & t-test)

# Load the packages
library(readr)
library(dplyr)
library(tidyr)
library(reshape2)
#set the working directory to the one that has the data files
setwd("C:\\Users\\Yunkai Tang\\OneDrive\\文档")

df <- read_csv("filtered_326_HRD_value.csv")
head(df)
# Process the data to the format that can be conducted statistical analysis
df_long <- reshape2::melt(df, id.vars = "SampleID", 
                          measure.vars = c("30x", "20x", "5x", "1x", "0.8x", "0.6x", "0.5x", "0.4x", "0.3x", "0.2x", "0.1x"),
                          variable.name = "Depth", value.name = "HRD_Value")

# Conduct one-way ANOVA
anova_result <- aov(HRD_Value ~ Depth, data = df_long)
summary(anova_result)




# Conduct ANOVA in diferrent HR subgroups (HRD, HR borderline, HRP)

# load the packages
library(readr)
library(dplyr)
library(tidyr)
library(reshape2)
library(stats)

# Calculate HR statuses
df$HRD_Status <- ifelse(df$`30x` < 15, "HRP",
                        ifelse(df$`30x` <= 19, "Borderline", "HRD"))

# Convert data from wide format to long format
df_long <- melt(df, id.vars = c("SampleID", "HRD_Status"), 
                measure.vars = c("30x", "20x", "5x", "1x", "0.8x", "0.6x", "0.5x", "0.4x", "0.3x", "0.2x", "0.1x"),
                variable.name = "Depth", value.name = "HRD_Value")



# Conduct ANOVA in different groups
results <- list()

for (status in c("HRD", "HRP", "Borderline")) {
  # filter the data by different HR statuses
  df_filtered <- df_long %>% filter(HRD_Status == status)
  
  # Conduct ANOVA on filtered data
  anova_result <- aov(HRD_Value ~ Depth, data = df_filtered)
  results[[status]] <- summary(anova_result)
}

print(results$HRD)
print(results$HRP)
print(results$Borderline)





# t-test

# load the package
library(tidyverse)

depths_to_compare <- c("20x", "5x", "1x", "0.8x", "0.6x", "0.5x", "0.4x", "0.3x", "0.2x", "0.1x")
results <- list()

for (depth in depths_to_compare) {
  df_30x <- df_long %>% filter(Depth == "30x")
  df_depth <- df_long %>% filter(Depth == depth)
  
  df_merged <- merge(df_30x, df_depth, by = "SampleID", suffixes = c("_30x", sprintf("_%s", depth)))
  
  # Conduct t-test
  t_test_result <- t.test(df_merged$HRD_Value_30x, df_merged[[paste0("HRD_Value_", depth)]], paired = TRUE)
  
  results[[depth]] <- t_test_result
}

results


# Conduct t-test in different HR status groups

results <- list()

for(status in hrd_statuses) {
  for(depth in depths_to_compare) {
    
    df_30x <- df_long %>% filter(Depth == "30x", HRD_Status == status)
    
    df_depth <- df_long %>% filter(Depth == depth, HRD_Status == status)
   
    df_merged <- merge(df_30x, df_depth, by = "SampleID", suffixes = c("_30x", paste0("_", depth)))
  
    t_test_result <- t.test(df_merged$HRD_Value_30x, df_merged[[paste0("HRD_Value_", depth)]], paired = TRUE)
   
    results[[paste(status, depth, sep = "_")]] <- t_test_result
  }
}

results






# Checking CCNE1 in tumor samples and draw the contour plot

library(ggplot2)
library(dplyr)
library(readr)

# Read the data
setwd("C:\\Users\\Yunkai Tang\\OneDrive\\文档")
ccne_cnv_df <- read_csv("filtered_CCNE_CNV.csv")
hrd_value_df <- read_csv("filtered_326_HRD_value.csv")

# Combine the CCNE1 TCN data and HR score data
merged_df <- merge(ccne_cnv_df, hrd_value_df, by = "SampleID") %>%
  select(SampleID, TCN, `30x`)

merged_df <- merged_df %>%
  rename(HRD_value = `30x`)

# Draw the contour plot
ggplot(merged_df, aes(x = TCN, y = HRD_value)) +
  geom_density_2d_filled() +
  labs(title = "Contour Plot of TCN vs HRD Value",
       x = "TCN", y = "HRD Value") +
  theme_minimal()



# Draw a clearer version

ggplot(merged_df, aes(x = TCN, y = HRD_value)) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon") +  
  scale_fill_gradientn(colors = c("darkblue", "yellow", "orange"), 
                       values = scales::rescale(c(0, 0.5, 1))) +  
  labs(title = "Contour Plot of TCN vs HRD Value with Custom Color Gradient", 
       x = "TCN", y = "HRD Value") +
  theme_minimal()

